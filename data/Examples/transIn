-- transIn


Derivation of

x `in` xs' | x `in` ys' <=== x `in` xs & (xs,ys) -> (xs',ys')

Simplifying the preceding formula (1 step) leads to 

x `in` xs & (xs,ys) -> (xs',ys') ==> x `in` xs' | x `in` ys'

Narrowing the preceding formula (2 steps) leads to 

x `in` xs & 
Any f:((xs',ys') = f((xs,ys)) & 
       (Any x0:(Idle(x0)(xs,ys) & maxwait > length(xs) & f = request(x0)) | 
        Any x0 xs0:
         (f = enter & xs = (x0:xs0) & ys = []) | 
        Any x0:(f = leave & ys = [x0]))) ==> 
x `in` xs' | x `in` ys'

Simplifying the preceding formula (11 steps) leads to 3 factors.
The current factor is given by

All x0:(x `in` xs & (xs',ys') = (request(x0)(xs,ys)) & Idle(x0)(xs,ys) & 
        maxwait > length(xs) ==> 
        x `in` xs' | x `in` ys')

Simplifying the preceding factors (10 steps) leads to 2 factors.
The current factor is given by

All f:(Any x0 xs0:
        (f = enter & xs = (x0:xs0) & ys = []) & 
       x `in` xs & (xs',ys') = f(xs,ys) ==> 
       x `in` xs' | x `in` ys')

Simplifying the preceding factors (11 steps) leads to 3 factors.
The current factor is given by

All x0 xs0:
 (x = x0 & (xs',ys') = enter(x0:xs0,[]) & ys = [] & xs = (x0:xs0) ==> 
  x `in` xs' | x `in` ys')

Simplifying the preceding factors (7 steps) leads to the factor

All xs0:(ys' = [last(x:xs0)] & xs' = init(x:xs0) & ys = [] & xs = (x:xs0) ==> 
         x `in` xs' | x = last(x:xs0))

Applying the theorem

x `in` init(y:s) | x = last(y:s) <=== x = y | x `in` s

at position [0,1] of the preceding factors leads to the factor

All xs0:(ys' = [last(x:xs0)] & xs' = init(x:xs0) & ys = [] & xs = (x:xs0) ==> 
         (x = x | x `in` xs0) & xs' = init(x:xs0))

Simplifying the preceding factors (3 steps) leads to 2 factors.
The current factor is given by

All x0 xs0:
 (x `in` xs0 & (xs',ys') = enter(x0:xs0,[]) & ys = [] & xs = (x0:xs0) ==> 
  x `in` xs' | x `in` ys')

Simplifying the preceding factors (5 steps) leads to the factor

All x0 xs0:
 (ys' = [last(x0:xs0)] & xs' = init(x0:xs0) & x `in` xs0 & ys = [] & 
  xs = (x0:xs0) ==> 
  x `in` xs' | x = last(x0:xs0))

Replacing the subtrees at position [0,1,0,1] of the preceding factors leads to the factor

All x0 xs0:
 (ys' = [last(x0:xs0)] & xs' = init(x0:xs0) & x `in` xs0 & ys = [] & 
  xs = (x0:xs0) ==> 
  x `in` init(x0:xs0) | x = last(x0:xs0))

Applying the theorem

x `in` init(y:s) | x = last(y:s) <=== x = y | x `in` s

at position [0,1] of the preceding factors leads to the factor

All x0 xs0:
 (ys' = [last(x0:xs0)] & xs' = init(x0:xs0) & x `in` xs0 & ys = [] & 
  xs = (x0:xs0) ==> 
  x = x0 | x `in` xs0)

Simplifying the preceding factors (2 steps) leads to a single formula,
which is given by

All f:(Any x0:(f = leave & ys = [x0]) & x `in` xs & (xs',ys') = f(xs,ys) ==> 
       x `in` xs' | x `in` ys')

Simplifying the preceding formula (11 steps) leads to 

All x0:(ys' = [] & xs' = xs & x `in` xs & ys = [x0] ==> x `in` xs' | False)

Simplifying the preceding formula (1 step) leads to 

All x0:(ys' = [] & xs' = xs & x `in` xs & ys = [x0] ==> x `in` xs')

Replacing the subtrees at position [0,1,1] of the preceding formula leads to 

All x0:(ys' = [] & xs' = xs & x `in` xs & ys = [x0] ==> x `in` xs)

Simplifying the preceding formula (2 steps) leads to 

True

Number of proof steps: 16