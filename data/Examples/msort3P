-- msort3P


Derivation of

mergesort3[3,2,1,4]

Simplifying the preceding term (1 step) leads to 

fun((s1,s2),merge3(mergesort3(3:s1),mergesort3(2:s2)))$split3[1,4]

Simplifying the preceding term (1 step) leads to 

fun((s1,s2),merge3(mergesort3(3:s1),mergesort3(2:s2)))$
(fun((s1,s2),(1:s1,4:s2))$split3[])

Simplifying the preceding term (1 step) leads to 

fun((s1,s2),merge3(mergesort3(3:s1),mergesort3(2:s2)))$
(fun((s1,s2),(1:s1,4:s2))([],[]))

Simplifying the preceding term (1 step) leads to 

fun((s1,s2),merge3(mergesort3(3:s1),mergesort3(2:s2)))(1:[],4:[])

Simplifying the preceding term (1 step) leads to 

merge3(mergesort3(3:(1:[])),mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3(fun((s1,s2),merge3(mergesort3(3:s1),mergesort3(1:s2)))$split3[],
       mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3(fun((s1,s2),merge3(mergesort3(3:s1),mergesort3(1:s2)))([],[]),
       mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3(merge3(mergesort3(3:[]),mergesort3(1:[])),mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3(merge3([3],mergesort3(1:[])),mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3(merge3([3],[1]),mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3(1:merge3(3:[],[]),mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3(1:(3:[]),mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3(1:[3],mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3([1,3],mergesort3(2:(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3([1,3],fun((s1,s2),merge3(mergesort3(2:s1),mergesort3(4:s2)))$split3[])

Simplifying the preceding term (1 step) leads to 

merge3([1,3],fun((s1,s2),merge3(mergesort3(2:s1),mergesort3(4:s2)))([],[]))

Simplifying the preceding term (1 step) leads to 

merge3([1,3],merge3(mergesort3(2:[]),mergesort3(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3([1,3],merge3([2],mergesort3(4:[])))

Simplifying the preceding term (1 step) leads to 

merge3([1,3],merge3([2],[4]))

Simplifying the preceding term (1 step) leads to 

merge3([1,3],2:merge3([],4:[]))

Simplifying the preceding term (1 step) leads to 

1:merge3([3],2:merge3([],4:[]))

Simplifying the preceding term (1 step) leads to 

1:(2:merge3(3:[],merge3([],4:[])))

Simplifying the preceding term (1 step) leads to 

1:(2:merge3([3],merge3([],4:[])))

Simplifying the preceding term (1 step) leads to 

1:(2:merge3([3],4:[]))

Simplifying the preceding term (1 step) leads to 

1:(2:(3:merge3([],4:[])))

Simplifying the preceding term (1 step) leads to 

1:(2:(3:(4:[])))

Simplifying the preceding term (1 step) leads to 

1:(2:(3:[4]))

Simplifying the preceding term (1 step) leads to 

1:(2:[3,4])

Simplifying the preceding term (1 step) leads to 

1:[2,3,4]

Simplifying the preceding term (1 step) leads to 

[1,2,3,4]

Number of proof steps: 30