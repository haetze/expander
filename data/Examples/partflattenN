-- partflattenN


Derivation of

part(s,p) ==> s = flatten(p)

SELECTING INDUCTION VARIABLES at position [0,0] of the preceding formula leads to 

All p:(part(!s,p) ==> !s = flatten(p))

NARROWING the preceding formula (1 step) leads to 

All p:(Any x:(!s = [x] & p = [[x]]) | 
       Any x y s p0:
        (part(y:s,p0) & !s = (x:(y:s)) & p = ([x]:p0)) | 
       Any x y s s' p0:
        (part(y:s,s':p0) & !s = (x:(y:s)) & p = ((x:s'):p0)) ==> 
       !s = flatten(p))

SIMPLIFYING the preceding formula (17 steps) leads to 

All x:(!s = [x] ==> [x] = flatten[[x]]) & 
All p0 s y x:
 (!s = (x:(y:s)) & part(y:s,p0) ==> (x:(y:s)) = flatten([x]:p0)) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

NARROWING the preceding formula (1 step) leads to 

All x:(!s = [x] ==> [x] = ([x]++flatten[])) & 
All p0 s y x:
 (!s = (x:(y:s)) & part(y:s,p0) ==> (x:(y:s)) = flatten([x]:p0)) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

NARROWING the preceding formula (1 step) leads to 

All x:(!s = [x] ==> [x] = ([x]++[])) & 
All p0 s y x:
 (!s = (x:(y:s)) & part(y:s,p0) ==> (x:(y:s)) = flatten([x]:p0)) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

SIMPLIFYING the preceding formula (1 step) leads to 

All x:(!s = [x] ==> [x] = (x:[])) & 
All p0 s y x:
 (!s = (x:(y:s)) & part(y:s,p0) ==> (x:(y:s)) = flatten([x]:p0)) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

SIMPLIFYING the preceding formula (1 step) leads to 

All x:(!s = [x] ==> x = x & [] = []) & 
All p0 s y x:
 (!s = (x:(y:s)) & part(y:s,p0) ==> (x:(y:s)) = flatten([x]:p0)) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s y x:
 (!s = (x:(y:s)) & part(y:s,p0) ==> (x:(y:s)) = flatten([x]:p0)) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

Applying the INDUCTION HYPOTHESIS

part(s,p) ===> (!s >> s ==> s = flatten(p))

at position [0,0,0,1] of the preceding formula leads to 

All p0 s y x:
 (!s = (x:(y:s)) & (!s >> (y:s) ==> (y:s) = flatten(p0)) ==> 
  (x:(y:s)) = flatten([x]:p0)) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

NARROWING the preceding formula (1 step) leads to 

All p0 s y x:
 (!s = (x:(y:s)) & (!s >> (y:s) ==> (y:s) = flatten(p0)) ==> 
  (x:(y:s)) = ([x]++flatten(p0))) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

The axioms were MATCHED against their redices.

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s y x:
 (!s = (x:(y:s)) & ((x:(y:s)) >> (y:s) ==> (y:s) = flatten(p0)) ==> 
  (x:(y:s)) = ([x]++flatten(p0))) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

NARROWING at position [0,0,0,1,0] of the preceding formula (1 step) leads to 

All p0 s y x:
 (!s = (x:(y:s)) & (True ==> (y:s) = flatten(p0)) ==> 
  (x:(y:s)) = ([x]++flatten(p0))) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

The axioms were MATCHED against their redices.

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s y x:
 (!s = (x:(y:s)) & (y:s) = flatten(p0) ==> (x:(y:s)) = ([x]++flatten(p0))) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s y x:
 (flatten(p0) = (y:s) & !s = (x:(y:s)) ==> (x:(y:s)) = ([x]++(y:s))) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s y x:
 (flatten(p0) = (y:s) & !s = (x:(y:s)) ==> (x:(y:s)) = (x:(y:s))) & 
All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s' s y x:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (x:(y:s)) = flatten((x:s'):p0))

Applying the INDUCTION HYPOTHESIS

part(s,p) ===> (!s >> s ==> s = flatten(p))

at position [0,0,1] of the preceding formula leads to 

All p0 s' s y x:
 (!s = (x:(y:s)) & (!s >> (y:s) ==> (y:s) = flatten(s':p0)) ==> 
  (x:(y:s)) = flatten((x:s'):p0))

NARROWING the preceding formula (1 step) leads to 

All p0 s' s y x:
 (!s = (x:(y:s)) & (!s >> (y:s) ==> (y:s) = (s'++flatten(p0))) ==> 
  (x:(y:s)) = flatten((x:s'):p0))

The axioms were MATCHED against their redices.

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s' s y x:
 (!s = (x:(y:s)) & ((x:(y:s)) >> (y:s) ==> (y:s) = (s'++flatten(p0))) ==> 
  (x:(y:s)) = flatten((x:s'):p0))

NARROWING the preceding formula (1 step) leads to 

All p0 s' s y x:
 (!s = (x:(y:s)) & (True ==> (y:s) = (s'++flatten(p0))) ==> 
  (x:(y:s)) = flatten((x:s'):p0))

The axioms were MATCHED against their redices.

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s' s y x:
 (!s = (x:(y:s)) & (y:s) = (s'++flatten(p0)) ==> (x:(y:s)) = flatten((x:s'):p0))

NARROWING the preceding formula (1 step) leads to 

All p0 s' s y x:
 (!s = (x:(y:s)) & (y:s) = (s'++flatten(p0)) ==> 
  (x:(y:s)) = ((x:s')++flatten(p0)))

The axioms were MATCHED against their redices.

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s' s y x:
 (!s = (x:(y:s)) & (y:s) = (s'++flatten(p0)) ==> 
  (x:(y:s)) = (x:(s'++flatten(p0))))

SIMPLIFYING the preceding formula (1 step) leads to 

All p0 s' s y x:
 ((s'++flatten(p0)) = (y:s) & !s = (x:(y:s)) ==> (x:(y:s)) = (x:(y:s)))

SIMPLIFYING the preceding formula (1 step) leads to 

True

Number of proof steps: 25