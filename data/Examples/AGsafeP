-- AGsafe


Derivation of

safe(st) ==> AG(safe)$st

Adding

  (AG0(z0)$st <=== safe(st) & z0 = safe)
& (notAG0(z0)$st ===> Not(safe(st)) | z0 =/= safe)

to the axioms and applying coinduction wrt

  (AG(P)$st ===> P(st) & AX(AG(P))$st)

at position [] of the preceding formula leads to 

All st:(safe(st) ==> AX(AG0(safe))$st)

The reducts have been simplified.

Narrowing the preceding formula (4 steps) leads to 3 factors.
The current factor is given by

All xs x0:(x0 `NOTin` xs & maxwait > length(xs) ==> AG0(safe)(x0:xs,[]))

The reducts have been simplified.

Narrowing the preceding factors (4 steps) leads to a single formula,
which is given by

All x xs:(AX(AG0(safe))(xs,[x]))

The reducts have been simplified.

Narrowing the preceding formula (4 steps) leads to 2 factors.
The current factor is given by

All x xs x1:
 (x1 `NOTin` xs & x1 =/= x & maxwait > length(xs) ==> safe(x1:xs,[x]))

The reducts have been simplified.

Narrowing the preceding factors (3 steps) leads to a single formula,
which is given by

True

The reducts have been simplified.

Number of proof steps: 5

Solutions:

True