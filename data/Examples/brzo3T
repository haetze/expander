-- /Users/Padawitz/ExpanderLib/brzo3T
[DeriveMode False False, Match 0, Mark [], Induction False 0, Mark [], Simplify True 100 False, Mark [[0, 0]], Narrow 0 False, Mark [[0, 0, 0, 1, 0]], Narrow 0 False, Mark [], Simplify True 100 False, Mark [[0, 0, 0, 1, 1]], Narrow 0 False, Mark [], Simplify True 100 False, Mark [[0, 0, 0]], Narrow 0 False, Mark [[0, 0, 0, 0, 0, 0, 0]], ReplaceVar "t" (F "delta" [V "t0", V "x"]) [0, 0, 0], Mark [[0, 0, 0, 0, 0, 0, 1, 0]], ReplaceVar "u" (V "u0") [0, 0, 0], Mark [[0, 0, 0, 0, 0, 0, 1, 1]], ReplaceVar "v0" (V "v") [0, 0, 0], Mark [], Simplify True 100 False, Mark [[0, 1, 0, 1, 0]], Narrow 0 False, Mark [], Simplify True 100 False, Mark [[0, 0, 0, 1, 1]], Narrow 0 False, Mark [[0, 0, 0, 1]], Theorem False (F "=" [F "+" [F "+" [V "t", V "u"], F "+" [V "v", V "w"]], F "+" [F "+" [V "t", V "v"], F "+" [V "u", V "w"]]]), Mark [[0, 0, 0]], Theorem False (F "<===" [F "`~0`" [F "+" [V "x1", V "x2"], F "+" [V "y1", V "y2"]], F "&" [F "`~0`" [V "x1", V "y1"], F "`~0`" [V "x2", V "y2"]]]), Mark [[0, 0, 0, 1]], Theorem False (F "`~0`" [V "x", V "x"]), Mark [[0, 0, 0]], Narrow 0 False, Mark [[0, 0, 0, 0, 0, 0, 0]], ReplaceVar "t" (F "delta" [V "t0", V "x"]) [0, 0, 0], Mark [[0, 0, 0, 0, 0, 0, 1, 0]], ReplaceVar "u" (V "u0") [0, 0, 0], Mark [[0, 0, 0, 0, 0, 0, 1, 1]], ReplaceVar "v2" (V "v") [0, 0, 0], Mark [], Simplify True 100 False, Mark [[0, 1], [0, 0]], Theorem False (F "|" [F "=" [F "beta" [V "t"], F "0" []], F "=" [F "beta" [V "t"], F "1" []]]), Mark [], Simplify True 100 False, Mark []]