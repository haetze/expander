-- pruneP


Derivation of

pruneBig(3)

Simplifying the preceding term (1 step) leads to 

mkTree(prune(3)$big(1))

Simplifying the preceding term (1 step) leads to 

mkTree(prune(3)$Node(big(2*1),1,big((2*1)+1)))

Simplifying the preceding term (1 step) leads to 

mkTree(prune(3)$Node(big(2),1,big(3)))

Simplifying the preceding term (1 step) leads to 

mkTree(Node(prune(2)$big(2),1,prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(mkTree(prune(2)$big(2)),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(mkTree(prune(2)$Node(big(2*2),2,big((2*2)+1))),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(mkTree(prune(2)$Node(big(4),2,big(5))),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(mkTree(Node(prune(1)$big(4),2,prune(1)$big(5))),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(mkTree(prune(1)$big(4)),mkTree(prune(1)$big(5))),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(mkTree(prune(1)$Node(big(2*4),4,big((2*4)+1))),mkTree(prune(1)$big(5))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(mkTree(prune(1)$Node(big(8),4,big(9))),mkTree(prune(1)$big(5))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(mkTree(Node(prune(0)$big(8),4,prune(0)$big(9))),mkTree(prune(1)$big(5))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(mkTree(prune(0)$big(8)),mkTree(prune(0)$big(9))),mkTree(prune(1)$big(5))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(mkTree(Empty),mkTree(prune(0)$big(9))),mkTree(prune(1)$big(5))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,mkTree(prune(0)$big(9))),mkTree(prune(1)$big(5))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,mkTree(Empty)),mkTree(prune(1)$big(5))),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),mkTree(prune(1)$big(5))),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),mkTree(prune(1)$Node(big(2*5),5,big((2*5)+1)))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),mkTree(prune(1)$Node(big(10),5,big(11)))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),mkTree(Node(prune(0)$big(10),5,prune(0)$big(11)))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(mkTree(prune(0)$big(10)),mkTree(prune(0)$big(11)))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(mkTree(Empty),mkTree(prune(0)$big(11)))),
  mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,mkTree(prune(0)$big(11)))),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,mkTree(Empty))),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),mkTree(prune(2)$big(3)))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  mkTree(prune(2)$Node(big(2*3),3,big((2*3)+1))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),mkTree(prune(2)$Node(big(6),3,big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  mkTree(Node(prune(1)$big(6),3,prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(mkTree(prune(1)$big(6)),mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(mkTree(prune(1)$Node(big(2*6),6,big((2*6)+1))),mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(mkTree(prune(1)$Node(big(12),6,big(13))),mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(mkTree(Node(prune(0)$big(12),6,prune(0)$big(13))),mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(mkTree(prune(0)$big(12)),mkTree(prune(0)$big(13))),
    mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(mkTree(Empty),mkTree(prune(0)$big(13))),mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(Empty,mkTree(prune(0)$big(13))),mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(Empty,mkTree(Empty)),mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),3(6(Empty,Empty),mkTree(prune(1)$big(7))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(Empty,Empty),mkTree(prune(1)$Node(big(2*7),7,big((2*7)+1)))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(Empty,Empty),mkTree(prune(1)$Node(big(14),7,big(15)))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(Empty,Empty),mkTree(Node(prune(0)$big(14),7,prune(0)$big(15)))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(Empty,Empty),7(mkTree(prune(0)$big(14)),mkTree(prune(0)$big(15)))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(Empty,Empty),7(mkTree(Empty),mkTree(prune(0)$big(15)))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),
  3(6(Empty,Empty),7(Empty,mkTree(prune(0)$big(15)))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),3(6(Empty,Empty),7(Empty,mkTree(Empty))))

Simplifying the preceding term (1 step) leads to 

1(2(4(Empty,Empty),5(Empty,Empty)),3(6(Empty,Empty),7(Empty,Empty)))

Number of proof steps: 45