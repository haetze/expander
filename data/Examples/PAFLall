-- PAFL

defuncts: flatten

preds: part >>

fovars: s s' p s1
axioms:

  part([x],[[x]]) 
& (part(x:y:s,[x]:p) <=== part(y:s,p))
& (part(x:y:s,(x:s'):p) <=== part(y:s,s':p))

& flatten[] == []
& flatten(s:p) == s++flatten(p)

& x:s>>s
& (s >> s' <=== s >> s1 & s1 >> s')

conjects:

part(s,p) ==> flatten(p)=s

_____________

-- /Users/Padawitz/ExpanderLib/PAFL1P

0. Derivation of

part(s,p) ==> flatten(p) = s

All simplifications are admitted.
Equation removal is safe.

1. Adding

  (part0(s,p) ===> flatten(p) = s)

to the axioms and applying FIXPOINT INDUCTION wrt

  part([x],[[x]])
& (part(x:(y:s),[x]:p) <=== part(y:s,p))
& (part(x:(y:s),(x:s'):p) <=== part(y:s,s':p))

at positions
[]
of the preceding formulas leads to 

All x p y s s':
 (flatten[[x]] = [x]) & 
All x p y s s':
 (flatten([x]:p) = (x:(y:s)) <=== part0(y:s,p)) & 
All x p y s s':
 (flatten((x:s'):p) = (x:(y:s)) <=== part0(y:s,s':p))

2. SIMPLIFYING the preceding formulas (12 steps) leads to 

All p y s:(part0(y:s,p) ==> flatten(p) = (y:s)) & 
All p y s s':
 (part0(y:s,s':p) ==> (s'++flatten(p)) = (y:s))

3. Applying the theorem

  (part0(s,p) ===> flatten(p) = s)

at positions
[1,0,0]
[0,0,0]
of the preceding formulas leads to 

All p y s:(flatten(p) = (y:s) ==> flatten(p) = (y:s)) & 
All p y s s':
 (flatten(s':p) = (y:s) ==> (s'++flatten(p)) = (y:s))

The axioms have been MATCHED against their redices.

4. SIMPLIFYING the preceding formulas (3 steps) leads to 

True

___________

-- /Users/Padawitz/ExpanderLib/PAFL2P

0. Derivation of

(part(s,p)==>(flatten(p)=s))

All simplifications are admitted.
Equation removal is safe.

1. SELECTING INDUCTION VARIABLES at positions
[0,0]
of the preceding formulas leads to 

All p:(part(!s,p) ==> flatten(p) = !s)
THIS GOAL COINCIDES WITH GOAL NO. 1

2. Applying the axioms

  part([x],[[x]])
& (part(x:(y:s),[x]:p) <=== part(y:s,p))
& (part(x:(y:s),(x:s'):p) <=== part(y:s,s':p))

at positions
[0,0]
of the preceding formulas leads to 

All p:(Any x:(!s = [x] & p = [[x]]) | 
       Any x y s p0:
        (part(y:s,p0) & !s = (x:(y:s)) & p = ([x]:p0)) | 
       Any x y s s' p0:
        (part(y:s,s':p0) & !s = (x:(y:s)) & p = ((x:s'):p0)) ==> 
       flatten(p) = !s)

3. SIMPLIFYING the preceding formulas (28 steps) leads to 

All x y s p0:
 (!s = (x:(y:s)) & part(y:s,p0) ==> flatten(p0) = (y:s)) & 
All x y s s' p0:
 (!s = (x:(y:s)) & part(y:s,s':p0) ==> (s'++flatten(p0)) = (y:s))

4. Applying the induction hypothesis

part(s,p) ===> (!s >> s ==> flatten(p) = s)

at positions
[0,0,0,1]
[1,0,0,1]
of the preceding formulas leads to 

All x y s p0:
 (!s = (x:(y:s)) & (!s >> (y:s) ==> flatten(p0) = (y:s)) ==> 
  flatten(p0) = (y:s)) & 
All x y s s' p0:
 (!s = (x:(y:s)) & (!s >> (y:s) ==> flatten(s':p0) = (y:s)) ==> 
  (s'++flatten(p0)) = (y:s))

5. Applying the theorem

  (x:s) >> s

at positions
[1,0,0,1,0]
[0,0,0,1,0]
of the preceding formulas leads to 

All x y s p0:
 (!s = (x:(y:s)) & (Any x0:(!s = (x0:(y:s))) ==> flatten(p0) = (y:s)) ==> 
  flatten(p0) = (y:s)) & 
All x y s s' p0:
 (!s = (x:(y:s)) & (Any x1:(!s = (x1:(y:s))) ==> flatten(s':p0) = (y:s)) ==> 
  (s'++flatten(p0)) = (y:s))

6. SIMPLIFYING the preceding formulas (5 steps) leads to 

All x y s p0:
 (!s = (x:(y:s)) & flatten(p0) = (y:s) ==> flatten(p0) = (y:s)) & 
All x y s s' p0:
 (!s = (x:(y:s)) & (Any x1:(!s = (x1:(y:s))) ==> flatten(s':p0) = (y:s)) ==> 
  (s'++flatten(p0)) = (y:s))

7. SIMPLIFYING the preceding formulas (5 steps) leads to 

All x y s s' p0:
 (!s = (x:(y:s)) & All x1:(x = x1 ==> flatten(s':p0) = (y:s)) ==> 
  (s'++flatten(p0)) = (y:s))

8. SIMPLIFYING the preceding formulas (5 steps) leads to 

True

