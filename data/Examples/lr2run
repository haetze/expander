-- lr2run


Derivation of

parse(ID col eq NUM semi ID col eq ID add NUM semi NUM mul ID add ID dot)

Simplifying the preceding term (1 step) leads to 

parse([ID,col,eq,NUM,semi,ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[0],
      [])

Simplifying the preceding term (1 step) leads to 

parse([ID,col,eq,NUM,semi,ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],
      [2,0],[statems])

Simplifying the preceding term (1 step) leads to 

parse([col,eq,NUM,semi,ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[7,2,0],
      [statems])

Simplifying the preceding term (1 step) leads to 

parse([eq,NUM,semi,ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[14,7,2,0],
      [statems])

Simplifying the preceding term (1 step) leads to 

parse([NUM,semi,ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[18,14,7,2,0],
      [statems])

Simplifying the preceding term (1 step) leads to 

parse([semi,ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[6,18,14,7,2,0],
      [statems])

Simplifying the preceding term (1 step) leads to 

parse([semi,ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[19,18,14,7,2,0],
      [statems,exp NUM])

Simplifying the preceding term (1 step) leads to 

parse([semi,ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[4,2,0],
      [statems,assign ID col eq exp(exp NUM)])

Simplifying the preceding term (1 step) leads to 

parse([ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[11,4,2,0],
      [statems,assign ID col eq exp(exp NUM)])

Simplifying the preceding term (1 step) leads to 

parse([ID,col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM))])

Simplifying the preceding term (1 step) leads to 

parse([col,eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM))])

Simplifying the preceding term (1 step) leads to 

parse([eq,ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[14,7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM))])

Simplifying the preceding term (1 step) leads to 

parse([ID,add,NUM,semi,NUM,mul,ID,add,ID,dot],[18,14,7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM))])

Simplifying the preceding term (1 step) leads to 

parse([add,NUM,semi,NUM,mul,ID,add,ID,dot],[13,18,14,7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM))])

Simplifying the preceding term (1 step) leads to 

parse([add,NUM,semi,NUM,mul,ID,add,ID,dot],[19,18,14,7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM)),
       exp ID])

Simplifying the preceding term (1 step) leads to 

parse([NUM,semi,NUM,mul,ID,add,ID,dot],[9,19,18,14,7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM)),
       exp ID])

Simplifying the preceding term (1 step) leads to 

parse([semi,NUM,mul,ID,add,ID,dot],[6,9,19,18,14,7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM)),
       exp ID])

Simplifying the preceding term (1 step) leads to 

parse([semi,NUM,mul,ID,add,ID,dot],[15,9,19,18,14,7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM)),
       exp ID,exp NUM])

Simplifying the preceding term (1 step) leads to 

parse([semi,NUM,mul,ID,add,ID,dot],[19,18,14,7,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM)),
       exp exp add exp(exp ID,exp NUM)])

Simplifying the preceding term (1 step) leads to 

parse([semi,NUM,mul,ID,add,ID,dot],[4,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM)),
       assign ID col eq exp(exp exp add exp(exp ID,exp NUM))])

Simplifying the preceding term (1 step) leads to 

parse([NUM,mul,ID,add,ID,dot],[11,4,2,0],
      [statems statems assign semi(statems,assign ID col eq exp(exp NUM)),
       assign ID col eq exp(exp exp add exp(exp ID,exp NUM))])

Simplifying the preceding term (1 step) leads to 

parse([NUM,mul,ID,add,ID,dot],[2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM)))])

Simplifying the preceding term (1 step) leads to 

parse([mul,ID,add,ID,dot],[6,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM)))])

Simplifying the preceding term (1 step) leads to 

parse([mul,ID,add,ID,dot],[3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp NUM])

Simplifying the preceding term (1 step) leads to 

parse([ID,add,ID,dot],[10,3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp NUM])

Simplifying the preceding term (1 step) leads to 

parse([add,ID,dot],[13,10,3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp NUM])

Simplifying the preceding term (1 step) leads to 

parse([add,ID,dot],[16,10,3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp NUM,exp ID])

Simplifying the preceding term (1 step) leads to 

parse([add,ID,dot],[3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp exp mul exp(exp NUM,exp ID)])

Simplifying the preceding term (1 step) leads to 

parse([ID,dot],[9,3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp exp mul exp(exp NUM,exp ID)])

Simplifying the preceding term (1 step) leads to 

parse([dot],[13,9,3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp exp mul exp(exp NUM,exp ID)])

Simplifying the preceding term (1 step) leads to 

parse([dot],[15,9,3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp exp mul exp(exp NUM,exp ID),exp ID])

Simplifying the preceding term (1 step) leads to 

parse([dot],[3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp exp add exp(exp exp mul exp(exp NUM,exp ID),exp ID)])

Simplifying the preceding term (1 step) leads to 

parse([end],[8,3,2,0],
      [statems statems assign semi(statems statems assign semi(statems,
                                                               assign ID col eq exp(exp NUM)),
                                   assign ID col eq exp(exp exp add exp(exp ID,
                                                                        exp NUM))),
       exp exp add exp(exp exp mul exp(exp NUM,exp ID),exp ID)])

Simplifying the preceding term (1 step) leads to 

parse([end],[1,0],
      [prog statems exp dot(statems statems assign semi(statems statems assign semi(statems,
                                                                                    assign ID col eq exp(exp NUM)),
                                                        assign ID col eq exp(exp exp add exp(exp ID,
                                                                                             exp NUM))),
                            exp exp add exp(exp exp mul exp(exp NUM,exp ID),
                                            exp ID))])

Simplifying the preceding term (1 step) leads to 

S prog(prog statems exp dot(statems statems assign semi(statems statems assign semi(statems,
                                                                                    assign ID col eq exp(exp NUM)),
                                                        assign ID col eq exp(exp exp add exp(exp ID,
                                                                                             exp NUM))),
                            exp exp add exp(exp exp mul exp(exp NUM,exp ID),
                                            exp ID)))

Number of proof steps: 35