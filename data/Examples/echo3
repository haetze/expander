-- ECHO3

-- see M.-O. Stehr, J. Meseguer, P.C. Ã–lveczky, Rewriting Logic as a Unifying 
-- Framework for Petri Nets, in: H. Ehrig et al., eds., Unifying Petri Nets, 
-- Springer LNCS 2128 (2001) 250-303

constructs: a b c
defuncts:   msgsout msgsin source target
preds:      loop
fovars:     x y qs ws ms us ps ts as ins s s' ss

axioms:

msgsout(a) = {(a,b),(a,c)}      &
msgsout(b) = {(b,a)}            &
msgsout(c) = {(c,a)}            &

msgsin(a) = {(b,a),(c,a)}       &
msgsin(b) = {(a,b)}         &
msgsin(c) = {(a,c)}         &

-- WAITING
(qs `gives` x & isGNormal(ms)
   ==> (qs,ws,ms,us,ps,ts,as) -> (qs-x,x:ws,ms++msgsout(x),us,ps,ts,as))      &

-- TERMINATED
(ws `gives` x & isGNormal(ms) & msgsin(x) = ins & ins <= ms 
   ==> (qs,ws,ms,us,ps,ts,as) -> (qs,ws-x,ms-ins,us,ps,x:ts,as))              &

-- PENDING
(us `gives` x & isGNormal(ms) & ms `gives` (y,x) 
   ==> (qs,ws,ms,us,ps,ts,as) 
    -> (qs,ws,(ms-(y,x))++(msgsout(x)-(x,y)),us-x,(x,y):ps,ts,as))        &

-- ACCEPTED
(ps `gives` (x,y) & isGNormal(ms) & msgsin(x)-(y,x) = ins & ins <= ms
   ==> (qs,ws,ms,us,ps,ts,as) -> (qs,ws,(x,y):(ms-ins),us,ps-(x,y),ts,x:as))  &

(s = target ==> loop(s:ss))                           &
(s =/= target & isGNormal(s) & s -> s' & s' `NOTin` ss 
            ==> (loop(s:ss) <=== loop(s':s:ss)))                  &

source = ({a},{},{},{b,c},{},{},{})                       &

target = ({},{},{},{},{},{a},{b,c})

conjects:

loop[source]
