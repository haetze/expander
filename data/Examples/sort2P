-- sort2P


Derivation of

sort2(leaf(3)#(leaf(2)#leaf(6)))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(represttips2(leaf(3)#(leaf(2)#leaf(6)))
                              (sort(ls))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (represttips2(leaf(2)#leaf(6))(ls2)))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (fun((ls1,u1,ls2),
                              fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                                 (represttips2(leaf(6))(ls2)))
                             (represttips2(leaf(2))(ls2))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (fun((ls1,u1,ls2),
                              fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                                 (fun(~(y:ls),([6],leaf(y),ls))(ls2)))
                             (represttips2(leaf(2))(ls2))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (fun((ls1,u1,ls2),
                              fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                                 (([6],leaf(head(ls2)),tail(ls2))))
                             (represttips2(leaf(2))(ls2))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (fun((ls1,u1,ls2),
                              fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                                 (([6],leaf(head(ls2)),drop(1,ls2))))
                             (represttips2(leaf(2))(ls2))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (fun((ls1,u1,ls2),
                              (ls1++[6],u1#leaf(head(ls2)),drop(1,ls2)))
                             (represttips2(leaf(2))(ls2))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (fun((ls1,u1,ls2),
                              (ls1++[6],u1#leaf(head(ls2)),drop(1,ls2)))
                             (fun(~(y:ls),([2],leaf(y),ls))(ls2))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (fun((ls1,u1,ls2),
                              (ls1++[6],u1#leaf(head(ls2)),drop(1,ls2)))
                             (([2],leaf(head(ls2)),tail(ls2)))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (fun((ls1,u1,ls2),
                              (ls1++[6],u1#leaf(head(ls2)),drop(1,ls2)))
                             (([2],leaf(head(ls2)),drop(1,ls2)))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (([2]++[6],leaf(head(ls2))#leaf(head(drop(1,ls2))),
                           drop(1,drop(1,ls2)))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      fun((ls3,u2,ls4),(ls1++ls3,u1#u2,ls4))
                         (([2,6],leaf(head(ls2))#leaf(head(drop(1,ls2))),
                           drop(2,ls2))))
                     (represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      (ls1++[2,6],u1#(leaf(head(ls2))#leaf(head(drop(1,ls2)))),
                       drop(2,ls2)))(represttips2(leaf(3))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      (ls1++[2,6],u1#(leaf(head(ls2))#leaf(head(drop(1,ls2)))),
                       drop(2,ls2)))(fun(~(y:ls),([3],leaf(y),ls))(sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      (ls1++[2,6],u1#(leaf(head(ls2))#leaf(head(drop(1,ls2)))),
                       drop(2,ls2)))(([3],leaf(head(sort(ls))),tail(sort(ls))))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(fun((ls1,u1,ls2),
                      (ls1++[2,6],u1#(leaf(head(ls2))#leaf(head(drop(1,ls2)))),
                       drop(2,ls2)))(([3],leaf(head(sort(ls))),drop(1,sort(ls))))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(([3]++[2,6],
                   leaf(head(sort(ls)))#(leaf(head(drop(1,sort(ls))))#leaf(head(drop(1,
                                                                                     drop(1,
                                                                                          sort(ls)))))),
                   drop(2,drop(1,sort(ls))))))

Simplifying the preceding term (1 step) leads to 

get1(mu ls u ls1.(([3,2,6],
                   leaf(head(sort(ls)))#(leaf(head(drop(1,sort(ls))))#leaf(head(drop(2,
                                                                                     sort(ls))))),
                   drop(3,sort(ls)))))

Simplifying the preceding term (1 step) leads to 

get1(([3,2,6],
      leaf(head(sort(get0(mu ls u ls1.(([3,2,6],
                                        leaf(head(sort(ls)))#(leaf(head(drop(1,
                                                                             sort(ls))))#leaf(head(drop(2,
                                                                                                        sort(ls))))),
                                        drop(3,sort(ls))))))))#(leaf(head(drop(1,
                                                                               sort(get0(mu ls u ls1.(([3,
                                                                                                        2,
                                                                                                        6],
                                                                                                       leaf(head(sort(ls)))#(leaf(head(drop(1,
                                                                                                                                            sort(ls))))#leaf(head(drop(2,
                                                                                                                                                                       sort(ls))))),
                                                                                                       drop(3,
                                                                                                            sort(ls)))))))))#leaf(head(drop(2,
                                                                                                                                            sort(get0(mu ls u ls1.(([3,
                                                                                                                                                                     2,
                                                                                                                                                                     6],
                                                                                                                                                                    leaf(head(sort(ls)))#(leaf(head(drop(1,
                                                                                                                                                                                                         sort(ls))))#leaf(head(drop(2,
                                                                                                                                                                                                                                    sort(ls))))),
                                                                                                                                                                    drop(3,
                                                                                                                                                                         sort(ls)))))))))),
      drop(3,
           sort(get0(mu ls u ls1.(([3,2,6],
                                   leaf(head(sort(ls)))#(leaf(head(drop(1,
                                                                        sort(ls))))#leaf(head(drop(2,
                                                                                                   sort(ls))))),
                                   drop(3,sort(ls)))))))))

Simplifying the preceding term (1 step) leads to 

leaf(head(sort[3,2,6]))#(leaf(head(drop(1,sort[3,2,6])))#leaf(head(drop(2,
                                                                        sort[3,
                                                                             2,
                                                                             6]))))

Simplifying the preceding term (1 step) leads to 

leaf(head[2,3,6])#(leaf(head(drop(1,sort[3,2,6])))#leaf(head(drop(2,sort[3,2,6]))))

Simplifying the preceding term (1 step) leads to 

leaf(2)#(leaf(head(drop(1,sort[3,2,6])))#leaf(head(drop(2,sort[3,2,6]))))

Simplifying the preceding term (1 step) leads to 

leaf(2)#(leaf(head(drop(1,[2,3,6])))#leaf(head(drop(2,sort[3,2,6]))))

Simplifying the preceding term (1 step) leads to 

leaf(2)#(leaf(3)#leaf(head(drop(2,sort[3,2,6]))))

Simplifying the preceding term (1 step) leads to 

leaf(2)#(leaf(3)#leaf(head(drop(2,[2,3,6]))))

Simplifying the preceding term (1 step) leads to 

leaf(2)#(leaf(3)#leaf(6))

Number of proof steps: 26