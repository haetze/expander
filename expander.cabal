-- Initial expander.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                expander

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             3.0.0.0

-- A short (one-line) description of the package.
synopsis:            Expander - a formal methods presenter

-- A longer description of the package.
description:         Expander2 is a flexible multi-purpose workbench for interactive term rewriting, graph transformation, theorem proving, constraint solving, flow graph analysis and other procedures that build up proofs or other rewrite sequences. Moreover, tailor-made interpreters display terms as two-dimensional structures ranging from trees and rooted graphs to a variety of pictorial representations that include tables, matrices, alignments, partitions, fractals and various tree-like or rectangular graph layouts. 

-- URL for the project homepage or repository.
homepage:            http://fldit-www.cs.uni-dortmund.de/~peter/ExpNeu/Welcome.html

-- The license under which the package is released.
license:             BSD3

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Peter Padawitz, Jos Kusiek

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          jos.kusiek@tu-dortmund.de

-- A copyright notice.
-- copyright:           

category:            Math

build-type:          Simple

data-dir:            data

data-files:          Examples/DNA
                   , Examples/PAFL
                   , Examples/STACKimpl
                   , Examples/STACKimpl2
                   , Examples/account
                   , Examples/align
                   , Examples/auto2
                   , Examples/auto3
                   , Examples/auto4
                   , Examples/base
                   , Examples/bool
                   , Examples/bottle
                   , Examples/bottleac
                   , Examples/brzozowski
                   , Examples/cbau2
                   , Examples/cellular
                   , Examples/coin1
                   , Examples/coin2
                   , Examples/crossing
                   , Examples/crossing2
                   , Examples/cse
                   , Examples/cycle
                   , Examples/derecExp
                   , Examples/derecJava
                   , Examples/distest17F
                   , Examples/echo
                   , Examples/echo1
                   , Examples/echo2
                   , Examples/echo4
                   , Examples/echoac
                   , Examples/election
                   , Examples/eosum
                   , Examples/evens2
                   , Examples/factflow
                   , Examples/faders
                   , Examples/ferns
                   , Examples/gauss
                   , Examples/graphs
                   , Examples/grow
                   , Examples/hinze
                   , Examples/hrel
                   , Examples/hulls
                   , Examples/itereqs
                   , Examples/kino
                   , Examples/kozentypes
                   , Examples/kripke1
                   , Examples/kripke2
                   , Examples/kripke3
                   , Examples/kripke5
                   , Examples/kripke6
                   , Examples/kripke7
                   , Examples/lazy
                   , Examples/leaves
                   , Examples/liftLab
                   , Examples/liftMueller
                   , Examples/lisa
                   , Examples/list
                   , Examples/listeval
                   , Examples/listrev
                   , Examples/log
                   , Examples/log4
                   , Examples/lr1
                   , Examples/lr2
                   , Examples/lr3
                   , Examples/meet
                   , Examples/micro
                   , Examples/modal
                   , Examples/mutex
                   , Examples/mutexAC
                   , Examples/mutexAlt
                   , Examples/mutexG.png
                   , Examples/mwgc
                   , Examples/nat
                   , Examples/newman
                   , Examples/newman2
                   , Examples/obdd
                   , Examples/obst
                   , Examples/oscis
                   , Examples/peaks
                   , Examples/penrose
                   , Examples/phil2
                   , Examples/phil3
                   , Examples/philac
                   , Examples/polygons
                   , Examples/polynoms
                   , Examples/prims
                   , Examples/prog
                   , Examples/queens
                   , Examples/queensE4
                   , Examples/queensE5
                   , Examples/queensE6
                   , Examples/reglangs
                   , Examples/relalg
                   , Examples/relalgp
                   , Examples/robotActs
                   , Examples/shelves
                   , Examples/simpl
                   , Examples/smilies
                   , Examples/stack
                   , Examples/stars
                   , Examples/stream
                   , Examples/trans0
                   , Examples/trans1
                   , Examples/trans2
                   , Examples/trans3
                   , Examples/turtles
                   , Examples/widgets
                   , Examples/wirth
                   , Examples/zip
                   , Examples/*.gif
                   , Examples/*.png
                   , Examples/lars/*.gif
                   , Examples/mutexAlt
                   , Examples/tweety/*.gif
                   , Pix/Painter.js
                   , style/style.css
                   , style/Solver.glade
                   , style/Painter.glade
                   , style/icon.png

-- Extra files to be distributed with the package, such as examples or a 
-- README.
extra-source-files:  win/icon.ico
                   , win/icon.rc
                   , win/icon.o
                   , win/res.bat
                   , mac/expander.bundle
                   , mac/icon.icns
                   , mac/Info.plist
                   , mac/launcher.sh
                   , README.md
                   , srcpath/bundle/win32/Paths.hs
                   , srcpath/unbundled/Paths.hs

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.18

Flag hilbs
  description: Build with hilbs executable.
  default: False

Flag more-warnings
  description: More warnings for code cleanup.
  default: False

Flag bundle
  description: Make data path relative for Win32 or OSX bundles.
  default: False
  
library
  hs-source-dirs:      src
  if flag(bundle)
    if os(osx)
        hs-source-dirs: srcpath/bundle/osx
    else
        hs-source-dirs: srcpath/bundle/win32
  else
    hs-source-dirs: srcpath/unbundled
  exposed-modules:     Ecom
                     , Epaint
                     , Esolve
                     , Eterm
                     , Gui.Base
                     , Gui.Canvas
                     , System.Expander
                     
  build-depends:       base  >=4.8 && < 5.0
                     , transformers
                     , mtl
                     , array
                     , gtk3
                     , cairo
                     , filepath
                     , directory
                     , text
                     , deepseq
                     , JuicyPixels

  default-language:    Haskell2010
  -- LANGUAGE extensions used by modules in this package.
  other-extensions:    ForeignFunctionInterface
                     , GeneralizedNewtypeDeriving
  
  other-modules:       Paths_expander
                     , Paths
                     
                     
executable expander
  -- .hs or .lhs file containing the Main module.
  main-is:             expander.hs
  
  -- Modules included in this executable, other than Main.
  -- other-modules:
  
  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions: 
  
  -- Other library packages from which modules are imported.
  build-depends:       base
                     , expander
                     , gtk3

  -- Directories containing source files.
  hs-source-dirs:      app

  -- Base language which the package is written in.
  default-language:    Haskell2010
  
  if (os(windows))
    ld-options: -mwindows win/icon.o
  
  ghc-options:         -threaded -with-rtsopts=-N -O2
  if flag(more-warnings)
    ghc-options:        -Wall
                        -fno-warn-name-shadowing
                        -fno-warn-type-defaults
                        -fno-warn-unused-do-bind
                        -fno-warn-type-defaults

executable hilbs
  -- .hs or .lhs file containing the Main module.
  main-is:             hilbs.hs
  
  -- Modules included in this executable, other than Main.
  -- other-modules:
                     
  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:    
  
  -- Other library packages from which modules are imported.
  build-depends:       base
                     , expander
                     , gtk3
                     , transformers
                     
  -- Directories containing source files.
  hs-source-dirs:      app

  -- Base language which the package is written in.
  default-language:    Haskell2010
  
  other-extensions:    BangPatterns
  
  ghc-options:         -threaded -with-rtsopts=-N -O2
  if flag(more-warnings)
    ghc-options:        -Wall
                        -fno-warn-name-shadowing
                        -fno-warn-type-defaults
                        -fno-warn-unused-do-bind
                        -fno-warn-type-defaults
  
  if (os(windows))
    ld-options: -mwindows win/icon.o
  
  if !flag(hilbs)
    buildable: False

benchmark expander-bench
  type:                exitcode-stdio-1.0
    
  -- .hs or .lhs file containing the Main module.
  main-is:             expander-bench.hs
  
  -- Modules included in this executable, other than Main.
  other-modules:       EtermBench
                     , GuiBench
  
  -- Other library packages from which modules are imported.
  build-depends:       base
                     , expander
                     , transformers
                     , mtl
                     , array
                     , gtk3
                     , cairo
                     , directory
                     , filepath
                     , deepseq
                     , criterion

  -- Directories containing source files.
  hs-source-dirs:      src, bench
  if flag(bundle)
    if os(osx)
        hs-source-dirs: srcpath/bundle/osx
    else
        hs-source-dirs: srcpath/bundle/win32
  else
    hs-source-dirs: srcpath/unbundled
  
  ghc-options:         -threaded -with-rtsopts=-N -rtsopts=all -O2

  -- Base language which the package is written in.
  default-language:    Haskell2010

test-suite expander-test
  type:               exitcode-stdio-1.0
  main-is:            expander-test.hs
  build-depends:      base
                    , expander
                    , transformers
                    , mtl
                    , array
                    , gtk3
                    , cairo
                    , filepath
                    , directory
                    , text
                    , deepseq
                    , test-framework
                    , test-framework-hunit
                    , test-framework-quickcheck2
                    , HUnit
                    , QuickCheck
                    
  other-modules:      EcomTest
                    , EsolveTest
                    , EpaintTest
                    , EtermTest
                    , SpecificationTest
                    
  hs-source-dirs:     test
  if flag(bundle)
    if os(osx)
        hs-source-dirs: srcpath/bundle/osx
    else
        hs-source-dirs: srcpath/bundle/win32
  else
    hs-source-dirs: srcpath/unbundled
  default-language:   Haskell2010
  ghc-options:         -threaded -with-rtsopts=-N -rtsopts=all -O2

source-repository head
  type:     git
  location: https://github.com/jokusi/expander
